{
  "version": 3,
  "sources": ["src/app/admin/Service/admin-coupon.service.ts", "src/app/share-module/FormConfig/Coupon-config.ts", "src/app/admin/coupon/coupon-form/coupon-form.component.ts", "src/app/admin/coupon/coupon-form/coupon-form.component.html", "src/app/admin/coupon/coupon.component.ts", "src/app/admin/coupon/coupon.component.html", "src/app/admin/dash-board/dash-board.component.ts", "src/app/admin/dash-board/dash-board.component.html", "src/app/admin/Service/admin-product.service.ts", "src/app/share-module/FormConfig/Product-config.ts", "src/app/admin/product/product-form/product-form.component.ts", "src/app/admin/product/product-form/product-form.component.html", "src/app/admin/product/product-list/product-list.component.ts", "src/app/admin/product/product-list/product-list.component.html", "src/app/admin/product/product.component.ts", "src/app/admin/product/product.component.html", "src/app/admin/Service/admin-Order.service.ts", "src/app/admin/Orders/order-list/order-list.component.ts", "src/app/admin/Orders/order-list/order-list.component.html", "src/app/share-module/FormConfig/OrderDetail-config.ts", "src/app/share-module/Constants/order-status.constants.ts", "src/app/admin/Orders/order-detail/order-detail.component.ts", "src/app/admin/Orders/order-detail/order-detail.component.html", "src/app/admin/admin-routing.module.ts", "src/app/admin/admin.module.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ICoupon } from '../../share-module/Interface/Icoupon';\r\nimport { IResponseDto } from '../../share-module/Interface/IResponseDto';\r\nimport { HttpService } from '../../share-module/Service/http.service';\r\nimport { ApiEndpointService } from '../../share-module/Service/ApiEndpoint.service';\r\n\r\n@Injectable()\r\nexport class CouponService {\r\n\r\n\r\n  constructor(private http: HttpService,private endpointservice:ApiEndpointService ) {}\r\n\r\n  getCoupons(): Observable<ICoupon[]> {\r\n    var url = this.endpointservice.endpoints.GetCoupon;\r\n    return this.http.get<ICoupon[]>(url);\r\n  }\r\n\r\n  createCoupons(Icoupon:ICoupon): Observable<IResponseDto> {\r\n    var url = this.endpointservice.endpoints.CreateCoupon;\r\n    return this.http.post<IResponseDto>(url,Icoupon);\r\n  }\r\n\r\n  updateCoupons(Icoupon:ICoupon): Observable<IResponseDto> {\r\n    var url = this.endpointservice.endpoints.UpdateCoupon;\r\n    return this.http.post<IResponseDto>(url,Icoupon);\r\n  }\r\n\r\n\r\n  DeleteCoupon(data:ICoupon):Observable<IResponseDto>{\r\n    var url = this.endpointservice.endpoints.DeleteCoupon;\r\n    return this.http.post<IResponseDto>(url,data);\r\n  }\r\n}\r\n", "import { Validators } from \"@angular/forms\";\r\n\r\nexport const CouponFormConfig = {\r\n    validationRules: {\r\n        couponCode:[Validators.required],\r\n        discountAmount:[Validators.required, Validators.min(0)],\r\n        minAmount: [Validators.required, Validators.min(0)]\r\n    },\r\n    formInstance: {\r\n     \r\n        couponId: '',\r\n        couponCode: '',\r\n        discountAmount:'',\r\n        minAmount:''\r\n    },\r\n  };\r\n\r\n", "// coupon-form.component.ts\r\n\r\nimport { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { FormService } from '../../../share-module/Service/Form.service';\r\nimport { CouponFormConfig } from '../../../share-module/FormConfig/Coupon-config';\r\n\r\n@Component({\r\n  selector: 'app-coupon-form',\r\n  templateUrl: './coupon-form.component.html',\r\n  styleUrls: ['./coupon-form.component.css']\r\n})\r\nexport class CouponFormComponent implements OnInit {\r\n  @Output() formSubmitted = new EventEmitter<any>();\r\n  @Output() BackButton = new EventEmitter<any>();\r\n  couponForm!: FormGroup;\r\n  @Input() initialFormValues: any;\r\n  @Input()CouponIDHide:boolean=false;\r\n\r\n  constructor(private formService:FormService) {\r\n    \r\n  }\r\n  \r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  this.disableCouponId() \r\n\r\n  }\r\n  ngAfterViewInit(): void {\r\n  if(this.initialFormValues !=null){\r\n    this.couponForm?.patchValue(this.initialFormValues);\r\n    }\r\n    else{\r\n      this.initForm();\r\n      \r\n    }\r\n  }\r\n  disableCouponId() {\r\n    this.couponForm.get('couponId')?.disable();\r\n  }\r\n\r\n  initForm(): void {\r\n    this.couponForm = this.formService.createForm(\r\n      CouponFormConfig.formInstance,\r\n      CouponFormConfig.validationRules,\r\n    );\r\n  }\r\n\r\n  submitForm(): void {\r\n    if (this.couponForm.valid) {\r\n      console.log(this.couponForm.getRawValue());\r\n      this.formSubmitted.emit(this.couponForm.getRawValue());\r\n      this.initForm(); // Reset the form after submission\r\n    }\r\n  }\r\n  goBack()\r\n  {\r\nthis.BackButton.emit(true);\r\n  }\r\n}\r\n", "<!-- coupon-form.component.html -->\r\n\r\n<form [formGroup]=\"couponForm\" class=\"mb-4 border rounded p-4 shadow\" style=\"max-width: 800px; margin: auto;\">\r\n    <div class=\"text-start mb-3\">\r\n        <button class=\"btn btn-outline-primary btn-sm\" (click)=\"goBack()\">\r\n          <i class=\"bi bi-arrow-left\"></i> \r\n        </button>\r\n      </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4 mb-3\" *ngIf=\"!CouponIDHide\" >\r\n            <label for=\"couponId\" class=\"form-label custom-label\">Coupon ID</label>\r\n            <input type=\"text\" class=\"form-control form-control-lg custom-input\" id=\"couponId\" formControlName=\"couponId\" [disabled]=\"true\">\r\n          </div>\r\n\r\n      <div class=\"col-md-4 mb-3\">\r\n        <label for=\"couponCode\" class=\"form-label custom-label\">Coupon Code</label>\r\n        <input type=\"text\" class=\"form-control form-control-lg custom-input\" id=\"couponCode\" formControlName=\"couponCode\" placeholder=\"Enter coupon code\">\r\n        <div *ngIf=\"couponForm.get('couponCode')?.hasError('required') && couponForm.get('couponCode')?.touched\" class=\"text-danger\">Coupon Code is required.</div>\r\n        <div *ngIf=\"couponForm.get('couponCode')?.hasError('maxlength') && couponForm.get('couponCode')?.touched\" class=\"text-danger\">Maximum length is 10 characters.</div>\r\n      </div>\r\n  \r\n      <div class=\"col-md-4 mb-3\">\r\n        <label for=\"discountAmount\" class=\"form-label custom-label\">Discount Amount</label>\r\n        <div class=\"input-group\">\r\n          <span class=\"input-group-text custom-input\" id=\"discountAmountLabel\">₹</span>\r\n          <input type=\"number\" class=\"form-control form-control-lg custom-input\" id=\"discountAmount\" formControlName=\"discountAmount\" placeholder=\"Enter discount amount\">\r\n          <div *ngIf=\"couponForm.get('discountAmount')?.hasError('required') && couponForm.get('discountAmount')?.touched\" class=\"text-danger\">Discount Amount is required.</div>\r\n          <div *ngIf=\"couponForm.get('discountAmount')?.hasError('min') && couponForm.get('discountAmount')?.touched\" class=\"text-danger\">Discount Amount must be greater than or equal to 0.</div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"col-md-4 mb-3\">\r\n        <label for=\"minAmount\" class=\"form-label custom-label\">Minimum Amount</label>\r\n        <div class=\"input-group\">\r\n          <span class=\"input-group-text custom-input\" id=\"minAmountLabel\">₹</span>\r\n          <input type=\"number\" class=\"form-control form-control-lg custom-input\" id=\"minAmount\" formControlName=\"minAmount\" placeholder=\"Enter minimum amount\">\r\n          <div *ngIf=\"couponForm.get('minAmount')?.hasError('required') && couponForm.get('minAmount')?.touched\" class=\"text-danger\">Minimum Amount is required.</div>\r\n          <div *ngIf=\"couponForm.get('minAmount')?.hasError('min') && couponForm.get('minAmount')?.touched\" class=\"text-danger\">Minimum Amount must be greater than or equal to 0.</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n   \r\n    <div class=\"text-center\">\r\n      <button class=\"btn btn-primary btn-sm btn-hover\" (click)=\"submitForm()\">Submit</button>\r\n    </div>\r\n  </form>\r\n  ", "// coupon-list.component.ts\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ICoupon } from '../../share-module/Interface/Icoupon';\r\nimport { CouponService } from '../Service/admin-coupon.service';\r\nimport { PaginationService } from '../../share-module/Service/pagination.service';\r\nimport { ToastService } from '../../share-module/Service/Toast.service';\r\nimport { ConfirmationDialogData } from '../../share-module/Interface/confirmation-dialog-data.interface';\r\nimport { SearchService } from '../../share-module/Service/search.service';\r\n@Component({\r\n  selector: 'app-coupon',\r\n  templateUrl: './coupon.component.html',\r\n  styleUrls: ['./coupon.component.css'],\r\n})\r\n\r\nexport class CouponComponent implements OnInit {\r\n  coupons: ICoupon[] = [];\r\n  displayedCoupons: ICoupon[] = [];\r\n  pageSize = 5;\r\n  currentPage = 1;\r\n  totalPages = 0;\r\n  pages: number[] = [];\r\n  searchTerm = '';\r\n  selectedCoupon!: ICoupon;\r\n  showCouponForm: boolean = false;\r\n  couponFormInitialValues!: any;\r\n  CouponIDHide: boolean = false;\r\n  \r\n \r\n  constructor(\r\n    private couponService: CouponService,\r\n    public paginationService: PaginationService,\r\n    private toastService: ToastService,\r\n    private searchService:SearchService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initializeCoupons();\r\n  }\r\n\r\n  initializeCoupons() {\r\n    this.couponService.getCoupons().subscribe((coupons) => {\r\n      this.coupons = coupons;\r\n      this.Paginate()\r\n    });\r\n  }\r\n  async search(): Promise<void> {\r\n    this.searchService.updateSearchTerm(this.searchTerm)\r\n    this.displayedCoupons = await this.searchService.search(this.coupons);\r\n    console.log(\"here\");\r\n  }\r\n\r\n\r\n  onSearchTermChange(): void {\r\n    console.log(\"here,inserchterm\")\r\n    this.search();\r\n  }\r\n\r\n\r\n  Paginate()\r\n  {\r\n    this.displayedCoupons = this.paginationService.getPaginatedItems(\r\n      this.coupons,\r\n      this.currentPage,\r\n      this.pageSize\r\n    );\r\n    this.calculateTotalPages();\r\n    this.pages = this.paginationService.getPageNumbers(this.totalPages);\r\n    this.setPage(1);\r\n  }\r\n\r\n  createCoupon() {\r\n    console.log('Creating a new coupon');\r\n    this.showCouponForm = !this.showCouponForm;\r\n    this.couponFormInitialValues = {};\r\n    this.CouponIDHide = true;\r\n    // Implement logic for creating a new coupon\r\n  }\r\n\r\n \r\n\r\n  setPage(page: number) {\r\n    if (page < 1 || page > this.totalPages) {\r\n      return;\r\n    }\r\n    console.log('here');\r\n    this.currentPage = page;\r\n    this.displayedCoupons = this.paginationService.getPaginatedItems(\r\n      this.coupons,\r\n      this.currentPage,\r\n      this.pageSize\r\n    );\r\n    this.pages = this.paginationService.getPageNumbers(this.totalPages);\r\n  }\r\n\r\n  private calculateTotalPages() {\r\n    this.totalPages = this.paginationService.calculateTotalPages(\r\n      this.coupons.length,\r\n      this.pageSize\r\n    );\r\n  }\r\n\r\n  editCoupon(coupon: ICoupon) {\r\n    this.showCouponForm = true;\r\n    this.selectedCoupon = coupon;\r\n    console.log(this.selectedCoupon, coupon);\r\n    this.couponFormInitialValues = coupon;\r\n    this.CouponIDHide = false;\r\n    // Implement logic for editing a coupon\r\n  }\r\n\r\n  deleteCoupon(coupon: ICoupon) {\r\n    console.log('Deleting coupon:', coupon);\r\n    const confirmationData: ConfirmationDialogData = {\r\n      title: 'Confirmation',\r\n      message: 'Are you sure you want to proceed?',\r\n    };\r\n\r\n    this.toastService.showConfirmation(confirmationData).then((confirmation) => {\r\n      console.log(confirmation)\r\n      if (confirmation) {\r\n    this.couponService.DeleteCoupon(coupon).subscribe((res) => {\r\n      if (res.isSuccess) {\r\n        // Find the index of the coupon in the list\r\n        const index = this.coupons.findIndex(\r\n          (c) => c.couponId === coupon.couponId\r\n        );\r\n        // Remove the coupon from the list if found\r\n        if (index !== -1) {\r\n          this.coupons.splice(index, 1);\r\n         this.Paginate();\r\n      this.toastService.showToast('Coupon Deleted Successfully', 'Coupon Deleted','error');\r\n         \r\n        }\r\n      }\r\n    });\r\n  }\r\n  else{\r\n    this.toastService.showToast('Action canceled','', 'info');\r\n  }\r\n})\r\n\r\n  }\r\n\r\n  onRowClick(coupon: ICoupon) {\r\n    this.selectedCoupon = coupon;\r\n    console.log('coupon,', coupon);\r\n  }\r\n\r\n  onPageChanged(page: number) {\r\n    console.log('here');\r\n    this.setPage(page);\r\n  }\r\n  onFormSubmitted(newCoupon: ICoupon) {\r\n    if (!newCoupon) {\r\n      return;\r\n    }\r\n\r\n    const existingCouponIndex = this.coupons.findIndex(\r\n      (coupon) => coupon.couponId === newCoupon.couponId\r\n    );\r\n\r\n    if (existingCouponIndex === -1) {\r\n      this.createOrUpdateCoupon(newCoupon,0);\r\n    } else {\r\n\r\n      this.coupons[existingCouponIndex] = newCoupon;\r\n      this.createOrUpdateCoupon(newCoupon,1);\r\n    }\r\n\r\n    this.displayedCoupons = this.coupons;\r\n    this.showCouponForm = false;\r\n  }\r\n\r\n  private createOrUpdateCoupon(newCoupon: ICoupon,type:number) {\r\n    if(type==0){\r\n   \r\n       newCoupon.couponId =0;\r\n       this.couponService.createCoupons(newCoupon).subscribe((res) => {\r\n        if (res.isSuccess) {\r\n          this.initializeCoupons();\r\n          this.toastService.showToast('Coupon Created Successfully','Coupon Created', 'success');\r\n        }\r\n      });\r\n    }\r\n    else\r\n    {\r\n      this.couponService.updateCoupons(newCoupon).subscribe((res) => {\r\n        if (res.isSuccess) {\r\n          this.initializeCoupons();\r\n          this.toastService.showToast('Coupon Updated successfully','Coupon Updated', 'info');\r\n        }\r\n      });\r\n    }\r\n\r\n   \r\n  }\r\n\r\n  GotoList(data: any) {\r\n    this.showCouponForm = false;\r\n  }\r\n\r\n  showConfirmation(): void {\r\n    const confirmationData: ConfirmationDialogData = {\r\n      title: 'Confirmation',\r\n      message: 'Are you sure you want to proceed?',\r\n    };\r\n\r\n    this.toastService\r\n      .showConfirmation(confirmationData)\r\n      .then(result => {\r\n        if (result) {\r\n          console.log('Confirmed');\r\n          // Perform the action when confirmed\r\n        } else {\r\n          console.log('Canceled');\r\n          // Perform the action when canceled or closed\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error('Error:', err);\r\n      });\r\n  }\r\n \r\n}\r\n", "\r\n<!-- coupon-list.component.html -->\r\n<div class=\"container mt-4\">\r\n  <h2>{{ showCouponForm ? \"Create Coupon\" : \"Coupon List\" }}</h2>\r\n\r\n  <!-- Button Group -->\r\n  <div class=\"d-flex justify-content-between mb-3\">\r\n    <div>\r\n      <button class=\"btn btn-primary\" (click)=\"createCoupon()\">\r\n        {{ showCouponForm ? \"Back\" : \"Create Coupon\" }}\r\n      </button>\r\n    </div>\r\n    <div class=\"input-group\" *ngIf=\"!showCouponForm\">\r\n      <input type=\"text\" class=\"form-control\" placeholder=\"Search Coupon\" [(ngModel)]=\"searchTerm\" (input)=\"onSearchTermChange()\">\r\n      <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"search()\">Search</button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Table -->\r\n  <div class=\"table-responsive\" *ngIf=\"!showCouponForm\">\r\n    <!-- Responsive table wrapper -->\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Coupon ID</th>\r\n          <th>Coupon Code</th>\r\n          <th>Discount Amount</th>\r\n          <th>Minimum Amount</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let coupon of displayedCoupons\" (click)=\"onRowClick(coupon)\" [class.selected]=\"selectedCoupon === coupon\">\r\n          <td>{{ coupon.couponId }}</td>\r\n          <td>{{ coupon.couponCode }}</td>\r\n          <td>{{ coupon.discountAmount | currency:'INR':'symbol':'1.2-2' }}</td>\r\n          <td>{{ coupon.minAmount | currency:'INR':'symbol':'1.2-2' }}</td>\r\n          <td>\r\n            <div class=\"btn-group\">\r\n              <button class=\"btn btn-sm btn-info me-2\" (click)=\"editCoupon(coupon)\">Edit</button>\r\n              <button class=\"btn btn-sm btn-danger\" (click)=\"deleteCoupon(coupon)\">Delete</button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <!-- Pagination -->\r\n  <app-pagination *ngIf=\"!showCouponForm\" [currentPage]=\"currentPage\" [totalPages]=\"totalPages\" [pages]=\"pages\" (pageChanged)=\"onPageChanged($event)\"></app-pagination>\r\n\r\n  <div *ngIf=\"showCouponForm\" class=\"row justify-content-center mt-4\">\r\n    <div class=\"col-md-8\">\r\n      <app-coupon-form (formSubmitted)=\"onFormSubmitted($event)\"\r\n      (BackButton)=\"GotoList($event)\"\r\n       [initialFormValues]=\"couponFormInitialValues\"\r\n       [CouponIDHide]=\"CouponIDHide\"></app-coupon-form>\r\n    </div>\r\n  </div>\r\n</div>", "import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TokenService } from '../../share-module/Service/token.service';\r\n\r\n@Component({\r\n  selector: 'app-dash-board',\r\n  templateUrl: './dash-board.component.html',\r\n  styleUrl: './dash-board.component.css'\r\n})\r\nexport class DashBoardComponent {\r\n  constructor (private Tokenservice :TokenService,private router :Router){\r\n    this.checkUserRoleAndNavigate()\r\n  }\r\n\r\n  checkUserRoleAndNavigate()\r\n{\r\n    if(!this.Tokenservice.validateToken())\r\n        this.router.navigate(['/home']);\r\n}\r\n}\r\n", "<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>\r\n", "import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ICoupon } from '../../share-module/Interface/Icoupon';\r\nimport { IResponseDto } from '../../share-module/Interface/IResponseDto';\r\nimport { HttpService } from '../../share-module/Service/http.service';\r\nimport { ApiEndpointService } from '../../share-module/Service/ApiEndpoint.service';\r\nimport { IProduct } from '../../share-module/Interface/Iproduct.model';\r\n\r\n\r\nexport interface ProductServiceAdmin {\r\n \r\n  createProduct(product: IProduct): Observable<IResponseDto>;\r\n  updateProduct(product: IProduct): Observable<IResponseDto>;\r\n  DeleteProduct(data: IProduct): Observable<IResponseDto>;\r\n  getAllProduct(): Observable<IProduct[]>;\r\n}\r\n\r\n@Injectable()\r\n\r\nexport class ProductService implements ProductServiceAdmin {\r\n\r\n\r\n  constructor(private http: HttpService,private endpointservice:ApiEndpointService ) {}\r\n\r\n  getAllProduct(): Observable<IProduct[]> {\r\n    var url = this.endpointservice.endpoints.GetAllProduct;\r\n    return this.http.get<IProduct[]>(url);\r\n  }\r\n\r\n  createProduct(product:IProduct): Observable<IResponseDto> {\r\n    var url = this.endpointservice.endpoints.CreateProduct;\r\n    return this.http.post<IResponseDto>(url,product);\r\n  }\r\n\r\n  updateProduct(product:IProduct): Observable<IResponseDto> {\r\n    var url = this.endpointservice.endpoints.UpdateProduct;\r\n    return this.http.post<IResponseDto>(url,product);\r\n  }\r\n\r\n\r\n  DeleteProduct(data:IProduct):Observable<IResponseDto>{\r\n    var url = this.endpointservice.endpoints.DeleteProduct;\r\n    return this.http.post<IResponseDto>(url,data);\r\n  }\r\n}\r\n", "import { Validators } from \"@angular/forms\";\r\n\r\nexport const ProductFormConfig = {\r\n    validationRules: {\r\n      name: [Validators.required],\r\n      price: [Validators.required,Validators.min(0)],\r\n      categoryName: [Validators.required],\r\n      imageUrl: [Validators.required],\r\n    },\r\n    formInstance: {\r\n      productId: '',\r\n      name: '',\r\n      description: '',\r\n      price: 0,\r\n      categoryName: '',\r\n      imageUrl: '',\r\n    },\r\n  };\r\n  ", "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormService } from '../../../share-module/Service/Form.service';\r\nimport { ProductFormConfig } from '../../../share-module/FormConfig/Product-config';\r\nimport { IProduct } from '../../../share-module/Interface/Iproduct.model';\r\n\r\n@Component({\r\n  selector: 'app-product-form',\r\n  templateUrl: './product-form.component.html',\r\n  styleUrl: './product-form.component.css',\r\n})\r\nexport class ProductFormComponent implements OnInit {\r\n  @Output() formSubmitted = new EventEmitter<any>();\r\n  @Output() BackButton = new EventEmitter<any>();\r\n  productForm!: FormGroup;\r\n  @Input() initialFormValues: any;\r\n  @Input() ProductIdHide: boolean = false;\r\n\r\n  constructor(private formService: FormService) {}\r\n\r\n  submitForm(): void {\r\n    if (this.productForm.valid) {\r\n      console.log(this.productForm.getRawValue());\r\n      this.formSubmitted.emit(this.productForm.getRawValue());\r\n      this.initForm(); // Reset the form after submission\r\n    }\r\n  }\r\n  goBack() {\r\n    this.BackButton.emit(true);\r\n  }\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n    this.disableProductId();\r\n  }\r\n  ngAfterViewInit(): void {\r\n    if(this.initialFormValues !=null){\r\n      this.productForm?.patchValue(this.initialFormValues);\r\n      }\r\n      else{\r\n        this.initForm();\r\n        \r\n      }\r\n    }\r\n\r\n  disableProductId() {\r\n    this.productForm.get('productId')?.disable();\r\n  }\r\n  initForm(): void {\r\n    this.productForm = this.formService.createForm(\r\n      ProductFormConfig.formInstance,\r\n      ProductFormConfig.validationRules\r\n    );\r\n  }\r\n \r\n}\r\n", "<!-- product-form.component.html -->\r\n\r\n<form [formGroup]=\"productForm\" class=\"mb-4 border rounded p-4 shadow\" style=\"max-width: 800px; margin: auto;\">\r\n    <div class=\"text-start mb-3\">\r\n      <button class=\"btn btn-outline-primary btn-sm\" (click)=\"goBack()\">\r\n        <i class=\"bi bi-arrow-left\"></i> \r\n      </button>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4 mb-3\"  *ngIf=\"!ProductIdHide\">\r\n        <label for=\"productId\" class=\"form-label custom-label\">Product ID</label>\r\n        <input type=\"text\" class=\"form-control form-control-lg custom-input\" id=\"productId\" formControlName=\"productId\" placeholder=\"Enter product ID\">\r\n      </div>\r\n  \r\n      <div class=\"col-md-4 mb-3\">\r\n        <label for=\"name\" class=\"form-label custom-label\">Product Name</label>\r\n        <input type=\"text\" class=\"form-control form-control-lg custom-input\" id=\"name\" formControlName=\"name\" placeholder=\"Enter product name\">\r\n        <div *ngIf=\"productForm.get('name')?.hasError('required') && productForm.get('name')?.touched\" class=\"text-danger\">Product Name is required.</div>\r\n      </div>\r\n  \r\n      <div class=\"col-md-4 mb-3\">\r\n        <label for=\"description\" class=\"form-label custom-label\">Description</label>\r\n        <input type=\"text\" class=\"form-control form-control-lg custom-input\" id=\"description\" formControlName=\"description\" placeholder=\"Enter description\">\r\n      </div>\r\n  \r\n      <div class=\"col-md-4 mb-3\">\r\n        <label for=\"price\" class=\"form-label custom-label\">Price</label>\r\n        <div class=\"input-group\">\r\n          <span class=\"input-group-text custom-input\" id=\"priceLabel\">₹</span>\r\n          <input type=\"number\" class=\"form-control form-control-lg custom-input\" id=\"price\" formControlName=\"price\" placeholder=\"Enter price\">\r\n          <div *ngIf=\"productForm.get('price')?.hasError('required') && productForm.get('price')?.touched\" class=\"text-danger\">Price is required.</div>\r\n          <div *ngIf=\"productForm.get('price')?.hasError('min') && productForm.get('price')?.touched\" class=\"text-danger\">Price must be greater than or equal to 0.</div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"col-md-4 mb-3\">\r\n        <label for=\"categoryName\" class=\"form-label custom-label\">Category Name</label>\r\n        <input type=\"text\" class=\"form-control form-control-lg custom-input\" id=\"categoryName\" formControlName=\"categoryName\" placeholder=\"Enter category name\">\r\n        <div *ngIf=\"productForm.get('categoryName')?.hasError('required') && productForm.get('categoryName')?.touched\" class=\"text-danger\">Category Name is required.</div>\r\n      </div>\r\n  \r\n      <div class=\"col-md-4 mb-3\">\r\n        <label for=\"imageUrl\" class=\"form-label custom-label\">Image URL</label>\r\n        <input type=\"text\" class=\"form-control form-control-lg custom-input\" id=\"imageUrl\" formControlName=\"imageUrl\" placeholder=\"Enter image URL\">\r\n        <div *ngIf=\"productForm.get('imageUrl')?.hasError('required') && productForm.get('imageUrl')?.touched\" class=\"text-danger\">Image URL is required.</div>\r\n      </div>\r\n    </div>\r\n  \r\n    <div class=\"text-center\">\r\n      <button class=\"btn btn-primary btn-sm btn-hover\" (click)=\"submitForm()\">Submit</button>\r\n    </div>\r\n  </form>\r\n  ", "import { Component, OnInit } from '@angular/core';\r\nimport { IProduct } from '../../../share-module/Interface/Iproduct.model';\r\nimport { PaginationService } from '../../../share-module/Service/pagination.service';\r\nimport { ProductService } from '../../Service/admin-product.service';\r\nimport { ToastService } from '../../../share-module/Service/Toast.service';\r\nimport { ConfirmationDialogData } from '../../../share-module/Interface/confirmation-dialog-data.interface';\r\nimport { Observable, Subject, debounceTime, distinctUntilChanged } from 'rxjs';\r\nimport { SearchService } from '../../../share-module/Service/search.service';\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.css'],\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n  isLoading: boolean = false; \r\n  pageSize = 5;\r\n  currentPage = 1;\r\n  totalPages = 0;\r\n  pages: number[] = [];\r\n  Product: IProduct[] = [];\r\n  displayedProducts: IProduct[] = [];\r\n  showProductForm: boolean = false;\r\n  productFormInitialValues!: any;\r\n  ProductIdHide: boolean = false;\r\n  selectedProduct!: IProduct;\r\n  searchTerm = '';\r\n\r\n  constructor(\r\n    public paginationService: PaginationService,\r\n    private productService: ProductService,\r\n    private toastService: ToastService,\r\n    private searchService:SearchService\r\n  ) {}\r\n   ngOnInit() {\r\n     this.initializeProducts();\r\n  }\r\n  createProduct() {\r\n    console.log('Creating a new coupon');\r\n    this.showProductForm = !this.showProductForm;\r\n    this.productFormInitialValues = {};\r\n    this.ProductIdHide = true;\r\n  }\r\n\r\n  async search(): Promise<void> {\r\n    this.searchService.updateSearchTerm(this.searchTerm)\r\n    this.displayedProducts = await this.searchService.search(this.Product);\r\n    console.log(\"here\");\r\n  }\r\n\r\n\r\n  onSearchTermChange(): void {\r\n    console.log(\"here,inserchterm\")\r\n    this.search();\r\n  }\r\n\r\n  onRowClick(Product: IProduct) {}\r\n\r\n  deleteProduct(product: IProduct) {\r\n    console.log('Deleting coupon:', product);\r\n    const confirmationData: ConfirmationDialogData = {\r\n      title: 'Confirmation',\r\n      message: 'Are you sure you want to proceed?',\r\n    };\r\n\r\n    this.toastService\r\n      .showConfirmation(confirmationData)\r\n      .then((confirmation) => {\r\n        console.log(confirmation);\r\n        if (confirmation) {\r\n          this.productService.DeleteProduct(product).subscribe((res) => {\r\n            if (res.isSuccess) {\r\n              // Find the index of the coupon in the list\r\n              const index = this.Product.findIndex(\r\n                (c) => c.productId === product.productId\r\n              );\r\n              // Remove the coupon from the list if found\r\n              if (index !== -1) {\r\n                this.Product.splice(index, 1);\r\n                this.Paginate();\r\n                this.toastService.showToast(\r\n                  'Coupon Deleted Successfully',\r\n                  'Coupon Deleted',\r\n                  'error'\r\n                );\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          this.toastService.showToast('Action canceled', '', 'info');\r\n        }\r\n      });\r\n  }\r\n\r\n  onPageChanged(page: number) {\r\n    this.setPage(page);\r\n  }\r\n\r\n   initializeProducts() {\r\n    this.isLoading = true;\r\n    this.productService.getAllProduct().subscribe((product) => {\r\n      this.isLoading = false;\r\n      console.log(product, 'hey');\r\n      this.Product = product;\r\n      this.displayedProducts = product;\r\n      this.Paginate();\r\n    })\r\n  }\r\n\r\n  Paginate() {\r\n    this.displayedProducts = this.paginationService.getPaginatedItems(\r\n      this.Product,\r\n      this.currentPage,\r\n      this.pageSize\r\n    );\r\n    this.calculateTotalPages();\r\n    this.pages = this.paginationService.getPageNumbers(this.totalPages);\r\n    this.setPage(1);\r\n  }\r\n\r\n  setPage(page: number) {\r\n    if (page < 1 || page > this.totalPages) {\r\n      return;\r\n    }\r\n    console.log('here');\r\n    this.currentPage = page;\r\n    this.displayedProducts = this.paginationService.getPaginatedItems(\r\n      this.Product,\r\n      this.currentPage,\r\n      this.pageSize\r\n    );\r\n    this.pages = this.paginationService.getPageNumbers(this.totalPages);\r\n  }\r\n\r\n  private calculateTotalPages() {\r\n    this.totalPages = this.paginationService.calculateTotalPages(\r\n      this.Product.length,\r\n      this.pageSize\r\n    );\r\n  }\r\n\r\n  GotoList(data: any) {\r\n    this.showProductForm = false;\r\n  }\r\n\r\n  editProduct(product: IProduct) {\r\n    this.showProductForm = true;\r\n    this.selectedProduct = product;\r\n    this.productFormInitialValues = product;\r\n    this.ProductIdHide = false;\r\n    // Implement logic for editing a coupon\r\n  }\r\n  onFormSubmitted(newproduct: IProduct) {\r\n    if (!newproduct) {\r\n      return;\r\n    }\r\n\r\n    const existingProductIndex = this.Product.findIndex(\r\n      (product) => product.productId === newproduct.productId\r\n    );\r\n\r\n    if (existingProductIndex === -1) {\r\n      this.createOrUpdateCoupon(newproduct, 0);\r\n    } else {\r\n      this.Product[existingProductIndex] = newproduct;\r\n      this.createOrUpdateCoupon(newproduct, 1);\r\n    }\r\n\r\n    this.displayedProducts = this.Product;\r\n    this.showProductForm = false;\r\n  }\r\n\r\n  private createOrUpdateCoupon(product: IProduct, type: number) {\r\n    if (type == 0) {\r\n      product.productId = 0;\r\n      this.productService.createProduct(product).subscribe((res) => {\r\n        if (res.isSuccess) {\r\n          this.initializeProducts();\r\n          this.toastService.showToast(\r\n            'Product Created Successfully',\r\n            'Product Created',\r\n            'success'\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      this.productService.updateProduct(product).subscribe((res) => {\r\n        if (res.isSuccess) {\r\n          this.initializeProducts();\r\n          this.toastService.showToast(\r\n            'Product Updated successfully',\r\n            'Product Updated',\r\n            'info'\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  showConfirmation(): void {\r\n    const confirmationData: ConfirmationDialogData = {\r\n      title: 'Confirmation',\r\n      message: 'Are you sure you want to proceed?',\r\n    };\r\n\r\n    this.toastService\r\n      .showConfirmation(confirmationData)\r\n      .then((result) => {\r\n        if (result) {\r\n          console.log('Confirmed');\r\n          // Perform the action when confirmed\r\n        } else {\r\n          console.log('Canceled');\r\n          // Perform the action when canceled or closed\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error('Error:', err);\r\n      });\r\n  }\r\n}\r\n", "<!-- product-list.component.html -->\r\n<div class=\"container mt-4\">\r\n    <h2>{{ showProductForm ? \"Create Product\" : \"Product List\" }}</h2>\r\n  \r\n    <!-- Button Group -->\r\n    <div class=\"d-flex justify-content-between mb-3\">\r\n      <div>\r\n        <button class=\"btn btn-primary\" (click)=\"createProduct()\">\r\n          {{ showProductForm ? \"Back\" : \"Create Product\" }}\r\n        </button>\r\n      </div>\r\n      <div class=\"input-group\" *ngIf=\"!showProductForm\">\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search Product\" [(ngModel)]=\"searchTerm\" (input)=\"onSearchTermChange()\">\r\n        <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"search()\">Search</button>\r\n      </div>\r\n    </div>\r\n  \r\n    <!-- Table -->\r\n    <div class=\"table-responsive\" *ngIf=\"!showProductForm\">\r\n      <!-- Responsive table wrapper -->\r\n      <div *ngIf=\"isLoading; else productTable\">\r\n        <!-- Show loader when data is loading -->\r\n        <div class=\"loader\">Loading...</div>\r\n      </div>\r\n      <ng-template #productTable>\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Product ID</th>\r\n              <th>Name</th>\r\n              <th>Description</th>\r\n              <th>Price</th>\r\n              <th>Category Name</th>\r\n              <th>Image</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <ng-container *ngIf=\"displayedProducts && displayedProducts.length > 0; else noData\">\r\n              <tr *ngFor=\"let product of displayedProducts \" (click)=\"onRowClick(product)\" [class.selected]=\"selectedProduct === product\">\r\n                <td>{{ product.productId }}</td>\r\n                <td>{{ product.name }}</td>\r\n                <td>{{ product.description }}</td>\r\n                <td>{{ product.price | currency:'INR':'symbol':'1.2-2' }}</td>\r\n                <td>{{ product.categoryName }}</td>\r\n                <td>\r\n                  <img *ngIf=\"product.imageUrl\" [src]=\"product.imageUrl\" alt=\"Product Image\" style=\"max-width: 100px; max-height: 100px;\">\r\n                </td>\r\n                <td>\r\n                  <div class=\"btn-group\">\r\n                    <button class=\"btn btn-sm btn-info me-2\" (click)=\"editProduct(product)\">Edit</button>\r\n                    <button class=\"btn btn-sm btn-danger\" (click)=\"deleteProduct(product)\">Delete</button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </ng-container>\r\n            <ng-template #noData>\r\n              <tr>\r\n                <td colspan=\"7\" class=\"text-center\">No products found.</td>\r\n              </tr>\r\n            </ng-template>\r\n          </tbody>\r\n        </table>\r\n      </ng-template>\r\n    </div>\r\n  \r\n    <!-- Pagination -->\r\n    <app-pagination *ngIf=\"!showProductForm && displayedProducts && displayedProducts.length > 0\" [currentPage]=\"currentPage\" [totalPages]=\"totalPages\" [pages]=\"pages\" (pageChanged)=\"onPageChanged($event)\"></app-pagination>\r\n  \r\n    <div *ngIf=\"showProductForm\" class=\"row justify-content-center mt-4\">\r\n      <div class=\"col-md-8\">\r\n        <app-product-form (formSubmitted)=\"onFormSubmitted($event)\"\r\n        (BackButton)=\"GotoList($event)\"\r\n        [initialFormValues]=\"productFormInitialValues\"\r\n        [ProductIdHide]=\"ProductIdHide\"></app-product-form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  ", "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrl: './product.component.css'\r\n})\r\nexport class ProductComponent {\r\n\r\n}\r\n", "\r\n\r\n<app-product-list></app-product-list>\r\n", "// cart.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { IResponseDto } from '../../share-module/Interface/IResponseDto';\r\nimport { ApiEndpointService } from '../../share-module/Service/ApiEndpoint.service';\r\nimport { HttpService } from '../../share-module/Service/http.service';\r\n\r\n@Injectable()\r\nexport class AdminOrderService {\r\n  constructor(\r\n    private http: HttpService,\r\n    private EndpointService: ApiEndpointService\r\n  ) {}\r\n\r\n  getOrder(OrderId: number): Observable<IResponseDto> {\r\n    var url = this.EndpointService.endpoints.GetOrder;\r\n    return this.http.get<IResponseDto>(`${url}${OrderId}`);\r\n  }\r\n  getAllOrder(): Observable<IResponseDto> {\r\n    return this.http.get<IResponseDto>(\r\n      this.EndpointService.endpoints.GetAllOrders\r\n    );\r\n  }\r\n\r\n  updateOrderStatus(orderId: number, newStatus: string): Observable<IResponseDto> {\r\n    const url = `${ this.EndpointService.endpoints.UpdateOrderStatus}${orderId}`;\r\n    const requestBody = `\"${newStatus}\"`; // Enclose newStatus in double quotes for raw string\r\n    return this.http.post<IResponseDto>(url,  requestBody );\r\n  }\r\n}\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { IOrderList } from '../../../share-module/Interface/OrderList.Interface';\r\nimport { AdminOrderService } from '../../Service/admin-Order.service';\r\nimport { PaginationService } from '../../../share-module/Service/pagination.service';\r\nimport { SearchService } from '../../../share-module/Service/search.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'Admin-order-list',\r\n  templateUrl: './order-list.component.html',\r\n  styleUrl: './order-list.component.css',\r\n})\r\nexport class AdminOrderListComponent implements OnInit {\r\n  orderlist: IOrderList[] = [];\r\n  Displayorderlist: IOrderList[] = [];\r\n  pageSize = 10;\r\n  currentPage = 1;\r\n  totalPages = 0;\r\n  pages: number[] = [];\r\n  searchTerm = '';\r\n  constructor(\r\n    private orderService: AdminOrderService,\r\n    public paginationService: PaginationService,\r\n    private searchService: SearchService,\r\n    private Router:Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.GetAllOrders();\r\n  }\r\n  async search(): Promise<void> {\r\n    this.searchService.updateSearchTerm(this.searchTerm)\r\n    this.Displayorderlist = await this.searchService.search(this.orderlist);\r\n  }\r\n  onSearchTermChange(): void {\r\n    if (this.searchTerm === '') {\r\n   this.Paginate();\r\n    }\r\n    else{\r\n    this.search();\r\n    }\r\n  }\r\n  GetAllOrders() {\r\n    this.orderService.getAllOrder().subscribe((res) => {\r\n      this.orderlist = res.result as IOrderList[];\r\n      console.log('hey data comming', this.orderlist);\r\n      this.Paginate()\r\n    });\r\n  }\r\n  goBack() {}\r\n  Paginate()\r\n  {\r\n    this.Displayorderlist = this.paginationService.getPaginatedItems(\r\n      this.orderlist,\r\n      this.currentPage,\r\n      this.pageSize\r\n    );\r\n    this.calculateTotalPages();\r\n    this.pages = this.paginationService.getPageNumbers(this.totalPages);\r\n    this.setPage(1);\r\n  }\r\n  setPage(page: number) {\r\n    if (page < 1 || page > this.totalPages) {\r\n      return;\r\n    }\r\n    console.log('here');\r\n    this.currentPage = page;\r\n    this.Displayorderlist = this.paginationService.getPaginatedItems(\r\n      this.orderlist,\r\n      this.currentPage,\r\n      this.pageSize\r\n    );\r\n    this.pages = this.paginationService.getPageNumbers(this.totalPages);\r\n  }\r\n\r\n  private calculateTotalPages() {\r\n    this.totalPages = this.paginationService.calculateTotalPages(\r\n      this.orderlist.length,\r\n      this.pageSize\r\n    );\r\n  }\r\n  onPageChanged(page: number) {\r\n    console.log('here');\r\n    this.setPage(page);\r\n  }\r\n\r\n  editOrder(order:IOrderList)\r\n  {\r\n    \r\n   this.Router.navigate([\"/admin/dashboard/orderDetail/\"+order.orderHeaderId])\r\n  }\r\n}\r\n", "\r\n<div class=\"container mt-3\">\r\n   \r\n    <!-- Search box and table wrapper -->\r\n    <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n        <h1 class=\"mb-0\">Order List</h1> <!-- Adjusted margin and padding -->\r\n\r\n      <!-- Search box in top right corner -->\r\n      <div class=\"input-group ms-auto\">\r\n        <input type=\"search\" class=\"form-control\" placeholder=\"Search Coupon\" [(ngModel)]=\"searchTerm\" (input)=\"onSearchTermChange()\">\r\n        <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"search()\">Search</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Table -->\r\n    <div class=\"table-responsive\">\r\n      <table class=\"table table-bordered table-hover\">\r\n        <thead class=\"table-dark\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Order ID</th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Phone</th>\r\n            <th scope=\"col\">Status</th>\r\n            <th scope=\"col\">Total</th>\r\n            <th scope=\"col\">Actions</th> \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let order of Displayorderlist; let i = index\">\r\n            <td>{{ i + 1 }}</td>\r\n            <td>{{ order.orderHeaderId }}</td>\r\n            <td>{{ order.email }}</td>\r\n            <td>{{ order.firstName }} {{ order.lastName }}</td>\r\n            <td>{{ order.phone }}</td>\r\n            <td><span class=\"badge bg-success\">{{ order.status }}</span></td>\r\n            <td>{{ order.orderTotal | currency }}</td>\r\n            <td>\r\n                <!-- Edit action icon -->\r\n                <button class=\"btn btn-link\" (click)=\"editOrder(order)\">\r\n                    <i class=\"bi bi-pencil\"></i> Edit\r\n                </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  \r\n    <!-- Pagination -->\r\n    <app-pagination [currentPage]=\"currentPage\" [totalPages]=\"totalPages\" [pages]=\"pages\" (pageChanged)=\"onPageChanged($event)\"></app-pagination>\r\n    \r\n    <!-- Scroll to top button -->\r\n    <button class=\"btn btn-scroll-top\" appScrollToTop>\r\n      <i class=\"bi bi-arrow-up\"></i>\r\n    </button>\r\n  </div>\r\n  ", "// login.config.ts\r\nimport { Validators } from '@angular/forms';\r\n\r\nexport const OrderDetailFormConfig = {\r\n  validationRules: {},\r\n  formInstance: {\r\n    name: '',\r\n    phone:'',\r\n    email:'',\r\n    orderDate:'',\r\n    sessionId:'',\r\n    paymentIntentId:'',\r\n    orderStatus:'',\r\n  },\r\n};\r\n", "// order-status.constants.ts\r\n\r\nexport const Status_Pending = \"Pending\";\r\nexport const Status_Approved = \"Approved\";\r\nexport const Status_ReadyForPickup = \"ReadyForPickup\";\r\nexport const Status_Completed = \"Completed\";\r\nexport const Status_Refunded = \"Refunded\";\r\nexport const Status_Cancelled = \"Cancelled\";\r\n", "import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AdminOrderService } from '../../Service/admin-Order.service';\r\nimport { IOrderList } from '../../../share-module/Interface/OrderList.Interface';\r\nimport { IOrderHeader } from '../../../share-module/Interface/OrderHeader.model';\r\nimport { FormService } from '../../../share-module/Service/Form.service';\r\nimport { OrderDetailFormConfig } from '../../../share-module/FormConfig/OrderDetail-config';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Status_Pending, Status_Approved, Status_ReadyForPickup, Status_Completed, Status_Refunded, Status_Cancelled } from '../../../share-module/Constants/order-status.constants';\r\n\r\n@Component({\r\n  selector: 'Admin-order-detail',\r\n  templateUrl: './order-detail.component.html',\r\n  styleUrl: './order-detail.component.css',\r\n})\r\nexport class AdminOrderDetailComponent implements OnInit,AfterViewInit {\r\n  constructor(private router: Router, private route: ActivatedRoute,\r\n    private orderService:AdminOrderService,private formService:FormService){}\r\n  OrderHeaderId!:number;\r\n  orderless!: IOrderHeader;\r\n  OrderDetailForm!:FormGroup\r\n  orderStatus!:string;\r\n  statusApproved = Status_Approved;\r\n  statusReadyForPickup = Status_ReadyForPickup;\r\n  statusCompleted = Status_Completed;\r\n  statusCancelled = Status_Cancelled;\r\n\r\n  ngOnInit(): void {\r\n    //this.getOrderHeaderIdFromRoute()\r\n    this.initForm()\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.getOrderHeaderIdFromRoute()\r\n  }\r\n // Function to get OrderHeader ID from route parameters\r\ngetOrderHeaderIdFromRoute() {\r\n  this.route.paramMap.subscribe((params) => {\r\n    // Check if params is not null before accessing its properties\r\n    if (params) {\r\n      // Access the OrderHeader ID using the safe navigation operator and parse it to an integer\r\n      const orderIdString = params.get('id');\r\n      this.OrderHeaderId = orderIdString ? +orderIdString : -1;\r\n      console.log('OrderHeader ID:', this.OrderHeaderId);\r\n\r\n      // Call the orderService to fetch order details by OrderHeader ID\r\n      this.orderService.getOrder(this.OrderHeaderId).subscribe((res) => {\r\n        if(res.isSuccess){\r\n        this.orderless = res.result as IOrderList;\r\n        this.orderStatus=this.orderless.status\r\n        console.log('Order details:', this.orderless);\r\n       this.populateForm()\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\ninitForm(): void {\r\n  this.OrderDetailForm = this.formService.createForm(\r\n    OrderDetailFormConfig.formInstance,\r\n    OrderDetailFormConfig.validationRules,\r\n  );\r\n}\r\npopulateForm(): void {\r\n  this.OrderDetailForm.patchValue({\r\n    name: this.orderless.firstName + ' ' + this.orderless.lastName,\r\n    phone: this.orderless.phone,\r\n    email: this.orderless.email,\r\n    orderDate: this.orderless.orderTime,\r\n    sessionId: this.orderless.stripsSessionId,\r\n    paymentIntentId: this.orderless.payementIntentId,\r\n    orderStatus: this.orderless.status\r\n    // Patch other form controls here\r\n  });\r\n}\r\nGoOrder()\r\n{\r\n  this.router.navigate([\"/admin/dashboard/order\"])\r\n}\r\nUpdateOrderStatus(orderHeaderId: number, status: string) {\r\nthis.orderService.updateOrderStatus(orderHeaderId,status).subscribe(res=>{\r\n  console.log(res,\"hey data comming\");\r\n})\r\n}\r\n\r\n\r\n\r\n}\r\n", "<form [formGroup]=\"OrderDetailForm\">\r\n    <br />\r\n    <div class=\"container\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header bg-dark text-light ml-0\">\r\n                <div class=\"container row\">\r\n                    <div class=\"col-12 d-none d-md-block col-md-6 pb-1 text-warning h3\">\r\n                        Order Summary\r\n                    </div>\r\n                    <div class=\"col-12 col-md-4 offset-md-2 text-right mt-2\">\r\n                        <a class=\"btn btn-warning form-control btn-sm\" (click)=\"GoOrder()\">Back to Orders</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\" *ngIf=\"orderless\">\r\n                {{orderless.firstName}}\r\n                {{orderless.lastName}}\r\n                <div class=\"container rounded p-2\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 col-lg-6 pb-4\">\r\n                            <div class=\"row my-1\">\r\n                                <div class=\"col-3\">Name</div>\r\n                                <div class=\"col-9\">\r\n                                    <input readonly class=\"form-control\" formControlName=\"name\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row my-1\">\r\n                                <div class=\"col-3\">Phone</div>\r\n                                <div class=\"col-9\">\r\n                                    <input readonly class=\"form-control\" formControlName=\"phone\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row my-1\">\r\n                                <div class=\"col-3\">Email</div>\r\n                                <div class=\"col-9\">\r\n                                    <input readonly class=\"form-control\" formControlName=\"email\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row my-1\">\r\n                                <div class=\"col-3\">Order Date</div>\r\n                                <div class=\"col-9\">\r\n                                    <input readonly class=\"form-control\" formControlName=\"orderDate\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row my-1\">\r\n                                <div class=\"col-3\">Session ID</div>\r\n                                <div class=\"col-9\">\r\n                                    <input readonly class=\"form-control\" formControlName=\"sessionId\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row my-1\">\r\n                                <div class=\"col-3\">Payment Intent ID</div>\r\n                                <div class=\"col-9\">\r\n                                    <input readonly class=\"form-control\" formControlName=\"paymentIntentId\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row my-1\">\r\n                                <div class=\"col-3\">Order Status</div>\r\n                                <div class=\"col-9\">\r\n                                    <input readonly class=\"form-control\" formControlName=\"orderStatus\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"col-12 col-lg-5 offset-lg-1\">\r\n                            <h4 class=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                <span class=\"text-warning\">Order Summary</span>\r\n                            </h4>\r\n                            <label class=\"bg-info text-dark text-center form-control my-2\">Order Status - {{\r\n                                orderless.status }}</label>\r\n\r\n                            <ul class=\"list-group mb-3\">\r\n\r\n                                <li class=\"list-group-item d-flex justify-content-between p-2\"\r\n                                    *ngFor=\"let detail of orderless.orderDetails\">\r\n                                    <div class=\"row container\">\r\n                                        <div class=\"col-8\">\r\n\r\n                                            <h6 class=\"my-0 text-primary\">{{ detail.productName }}</h6>\r\n                                            <small class=\"text-muted\">Price : {{ detail.price }}</small><br />\r\n                                            <small class=\"text-muted\">Quantity : {{ detail.count }}</small>\r\n                                        </div>\r\n                                        <div class=\"col-4 text-end\">\r\n                                            <p class=\"text-success\">{{ detail.count * detail.price }}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n\r\n                                <li class=\"list-group-item bg-primary\">\r\n                                    <div class=\"row container\">\r\n                                        <div class=\"col-6\">\r\n                                            <h5 class=\"text-white\">TOTAL </h5>\r\n                                        </div>\r\n                                        <div class=\"col-6 text-end\">\r\n                                            <h5 class=\"text-white\">{{ orderless.orderTotal }}</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n\r\n                            <div *ngIf=\"orderStatus === statusApproved\">\r\n                                <button type=\"submit\" class=\"btn btn-success form-control my-1\" (click)=\"UpdateOrderStatus(orderless.orderHeaderId,statusReadyForPickup)\">Ready for\r\n                                    Pickup</button>\r\n                            </div>\r\n\r\n                            <div *ngIf=\"orderStatus === statusReadyForPickup\">\r\n                                <button type=\"submit\" class=\"btn btn-success form-control my-1\" (click)=\"UpdateOrderStatus(orderless.orderHeaderId,statusCompleted)\">Complete Order</button>\r\n                            </div>\r\n\r\n                            <div *ngIf=\"orderStatus === statusApproved || orderStatus === statusReadyForPickup\">\r\n                                <button type=\"submit\" class=\"btn btn-danger form-control my-1\" (click)=\"UpdateOrderStatus(orderless.orderHeaderId,statusCancelled)\">Cancel Order</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CouponComponent } from './coupon/coupon.component';\r\nimport { DashBoardComponent } from './dash-board/dash-board.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { AdminOrderListComponent } from './Orders/order-list/order-list.component';\r\nimport { AdminOrderDetailComponent } from './Orders/order-detail/order-detail.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\r\n\r\n  {\r\n    path: 'dashboard',\r\n    component: DashBoardComponent,\r\n    children: [\r\n      { path: 'coupon', component: CouponComponent },\r\n      { path: 'product', component: ProductComponent },\r\n      { path: 'order', component: AdminOrderListComponent },\r\n      { path: 'orderDetail/:id', component: AdminOrderDetailComponent },\r\n      // Add additional child routes if needed\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminRoutingModule {}\r\n", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { CouponComponent } from './coupon/coupon.component';\r\nimport { SharedModule } from '../share-module/share.module';\r\nimport { CouponFormComponent } from './coupon/coupon-form/coupon-form.component';\r\nimport { DashBoardComponent } from './dash-board/dash-board.component';\r\nimport { CouponService } from './Service/admin-coupon.service';\r\nimport { ProductFormComponent } from './product/product-form/product-form.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { ProductListComponent } from './product/product-list/product-list.component';\r\nimport { ProductService } from './Service/admin-product.service';\r\nimport { AdminOrderService } from './Service/admin-Order.service';\r\nimport { AdminOrderListComponent } from './Orders/order-list/order-list.component';\r\nimport { AdminOrderDetailComponent } from './Orders/order-detail/order-detail.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CouponComponent,\r\n    CouponFormComponent,\r\n    DashBoardComponent,\r\n    ProductFormComponent,\r\n    ProductComponent,\r\n    ProductListComponent,\r\n    AdminOrderListComponent,\r\n    AdminOrderDetailComponent\r\n  ],\r\n  imports: [AdminRoutingModule, SharedModule],\r\n  providers: [CouponService, ProductService,AdminOrderService],\r\n  exports: [CouponComponent, CouponFormComponent],\r\n})\r\nexport class AdminModule {}\r\n"],
  "mappings": "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",
  "names": ["Router"]
}
